/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package giaovu.form;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import pojo.Diemdanh;
import pojo.DiemdanhId;
import pojo.Monhoc;
import pojo.Sinhvien;
import util.HibernateUtil;

/**
 *
 * @author DELL
 */
public class pnXemDiemDanh extends javax.swing.JPanel {

    /**
     * Creates new form pnXemDiemDanh
     */
    List resultList;
    
    public pnXemDiemDanh() {
        initComponents();
        try {
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q = session.createQuery("select m.tenmonhoc from pojo.Monhoc m");
            resultList = q.list();
            ArrayList<String> ls=new ArrayList<String>();
            for(Object o:resultList)
            {
                ls.add(o.toString());
            }
            jComboBox1.setModel(new DefaultComboBoxModel(ls.toArray()));                     
            session.getTransaction().commit();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setAutoscrolls(true);

        jLabel1.setText("Chọn môn");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null,  new Boolean(false), null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SV", "Tuần 1", "Tuần 2", "Tuần 3", "Tuần 4 ", "Tuần 5", "Tuần 6", "Tuần 7", "Tuần 8", "Tuần 9", "Tuần 10", "Tuần 11", "Tuần 12", "Tuần 13", "Tuần 14", "Tuần 15"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Bảng điểm danh");

        jButton1.setText("Cập nhật");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(340, 340, 340)
                .addComponent(jLabel2)
                .addContainerGap(358, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        int n=0;       
         try {
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q = session.createQuery("select dd from pojo.Monhoc mh,pojo.Diemdanh dd where mh.idmonhoc=dd.id.idmonhoc and mh.tenmonhoc=:tenMonhoc");
            q.setString("tenMonhoc", (String)jComboBox1.getSelectedItem());
            resultList = q.list();
            
            for(Object o:resultList)
            {
                Diemdanh temp=(Diemdanh) o;
                jTable1.setValueAt(temp.getId().getIdsinhvien(), n, 0);
                if(temp.getT1()!=null)
                {
                   if(temp.getT1()!=0)
                       jTable1.setValueAt(true,n,1);
                  
                }
                if(temp.getT2()!=null)
                {
                   if(temp.getT2()!=0)
                       jTable1.setValueAt(true,n,2);
                  
                }
                if(temp.getT3()!=null)
                {
                   if(temp.getT3()!=0)
                       jTable1.setValueAt(true,n,3);
                  
                }
                if(temp.getT4()!=null)
                {
                   if(temp.getT4()!=0)
                       jTable1.setValueAt(true,n,4);
                  
                }
                if(temp.getT5()!=null)
                {
                   if(temp.getT5()!=0)
                       jTable1.setValueAt(true,n,5);
                  
                }
                if(temp.getT6()!=null)
                {
                   if(temp.getT6()!=0)
                       jTable1.setValueAt(true,n,6);
                  
                }
                if(temp.getT7()!=null)
                {
                   if(temp.getT7()!=0)
                       jTable1.setValueAt(true,n,7);
                  
                }
                if(temp.getT8()!=null)
                {
                   if(temp.getT8()!=0)
                       jTable1.setValueAt(true,n,8);
                  
                }
                if(temp.getT9()!=null)
                {
                   if(temp.getT9()!=0)
                       jTable1.setValueAt(true,n,9);
                  
                }
                if(temp.getT10()!=null)
                {
                   if(temp.getT10()!=0)
                       jTable1.setValueAt(true,n,10);
                  
                }
                if(temp.getT11()!=null)
                {
                   if(temp.getT11()!=0)
                       jTable1.setValueAt(true,n,11);
                  
                }
                if(temp.getT12()!=null)
                {
                   if(temp.getT12()!=0)
                       jTable1.setValueAt(true,n,12);
                  
                }
                if(temp.getT13()!=null)
                {
                   if(temp.getT13()!=0)
                       jTable1.setValueAt(true,n,13);
                  
                }
                if(temp.getT14()!=null)
                {
                   if(temp.getT14()!=0)
                       jTable1.setValueAt(true,n,14);
                  
                }
                if(temp.getT15()!=null)
                {
                   if(temp.getT15()!=0)
                       jTable1.setValueAt(true,n,15);
                  
                }
                n++;
            }
                              
            session.getTransaction().commit();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Diemdanh dd=new Diemdanh();
        DiemdanhId id=new DiemdanhId();
        int idd=0;
        try {
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query q = session.createQuery("from pojo.Monhoc");
            resultList=q.list();
            for(Object o:resultList)
            {
                Monhoc temp=(Monhoc) o;
                if(temp.getTenmonhoc().equals(jComboBox1.getSelectedItem()))
                    idd=temp.getIdmonhoc();
            }
            for(int i=0;jTable1.getValueAt(i+1,0)!=null;i++){
                id.setIdmonhoc(idd);
               // System.out.println(jTable1.getValueAt(i, 0));
                id.setIdsinhvien((int)jTable1.getValueAt(i, 0));
                dd.setId(id);
                if(jTable1.getValueAt(i, 1)!=null){
                    if((boolean)jTable1.getValueAt(i, 1)==true)
                        dd.setT1(1);
                    else
                        dd.setT1(0);
                }
                else
                    dd.setT1(0);
                if(jTable1.getValueAt(i, 2)!=null){
                    if((boolean)jTable1.getValueAt(i, 2)==true)
                        dd.setT2(1);
                    else
                        dd.setT2(0);
                }
                else
                    dd.setT2(0);
                if(jTable1.getValueAt(i, 3)!=null){
                    if((boolean)jTable1.getValueAt(i, 3)==true)
                        dd.setT3(1);
                    else
                        dd.setT3(0);
                }
                else
                    dd.setT3(0);
                if(jTable1.getValueAt(i, 4)!=null){
                    if((boolean)jTable1.getValueAt(i, 4)==true)
                        dd.setT4(1);
                    else
                        dd.setT4(0);
                }
                else
                    dd.setT4(0);
                if(jTable1.getValueAt(i, 5)!=null){
                    if((boolean)jTable1.getValueAt(i, 5)==true)
                        dd.setT5(1);
                    else
                        dd.setT5(0);
                }
                else
                    dd.setT5(0);
                if(jTable1.getValueAt(i, 6)!=null){
                    if((boolean)jTable1.getValueAt(i, 6)==true)
                        dd.setT6(1);
                    else
                        dd.setT6(0);
                }
                else
                    dd.setT6(0);
                if(jTable1.getValueAt(i, 7)!=null){
                    if((boolean)jTable1.getValueAt(i, 7)==true)
                        dd.setT7(1);
                    else
                        dd.setT7(0);
                }
                else
                    dd.setT7(0);
                if(jTable1.getValueAt(i, 8)!=null){
                    if((boolean)jTable1.getValueAt(i, 8)==true)
                        dd.setT8(1);
                    else
                        dd.setT8(0);
                }
                else
                    dd.setT8(0);
                if(jTable1.getValueAt(i, 9)!=null){
                    if((boolean)jTable1.getValueAt(i, 9)==true)
                        dd.setT9(1);
                    else
                        dd.setT9(0);
                }
                else
                    dd.setT9(0);
                if(jTable1.getValueAt(i, 10)!=null){
                    if((boolean)jTable1.getValueAt(i, 10)==true)
                        dd.setT10(1);
                    else
                        dd.setT10(0);
                }
                else
                    dd.setT10(0);
                if(jTable1.getValueAt(i, 11)!=null){
                    if((boolean)jTable1.getValueAt(i, 11)==true)
                        dd.setT11(1);
                    else
                        dd.setT11(0);
                }
                else
                    dd.setT11(0);
                if(jTable1.getValueAt(i, 12)!=null){
                   if((boolean)jTable1.getValueAt(i, 12)==true)
                        dd.setT12(1);
                    else
                        dd.setT12(0);
                }
                else
                    dd.setT12(0);
                if(jTable1.getValueAt(i, 13)!=null){
                    if((boolean)jTable1.getValueAt(i, 13)==true)
                        dd.setT13(1);
                    else
                        dd.setT13(0);
                }
                else
                    dd.setT13(0);
                if(jTable1.getValueAt(i, 14)!=null){
                    if((boolean)jTable1.getValueAt(i, 14)==true)
                        dd.setT14(1);
                    else
                        dd.setT14(0);
                }
                else
                    dd.setT14(0);
                if(jTable1.getValueAt(i, 15)!=null){
                    if((boolean)jTable1.getValueAt(i, 15)==true)
                        dd.setT15(1);
                    else
                        dd.setT15(0);
                }
                else
                    dd.setT15(0);
                
              q=session.createQuery("update pojo.Diemdanh dd set dd.t1=:t1,dd.t2=:t2,dd.t3=:t3,t4=:t4,"
                      + "t5=:t5,t6=:t6,t7=:t7,t8=:t8,t9=:t9,t10=:t10,t11=:t11,t12=:t12,t13=:t13,t14=:t14,t15=:t15 "
                        + "where dd.id.idsinhvien=:idsinhvien and dd.id.idmonhoc=:idmonhoc");
              q.setParameter("t1", dd.getT1());
              q.setParameter("t2", dd.getT2());
              q.setParameter("t3", dd.getT3());
              q.setParameter("t4", dd.getT4());
              q.setParameter("t5", dd.getT5());
              q.setParameter("t6", dd.getT6());
              q.setParameter("t7", dd.getT7());
              q.setParameter("t8", dd.getT8());
              q.setParameter("t9", dd.getT9());
              q.setParameter("t10", dd.getT10());
              q.setParameter("t11", dd.getT11());
              q.setParameter("t12", dd.getT12());
              q.setParameter("t13", dd.getT13());
              q.setParameter("t14", dd.getT14());
              q.setParameter("t15", dd.getT15());
              q.setParameter("idsinhvien", dd.getId().getIdsinhvien());
              q.setParameter("idmonhoc", idd);
              q.executeUpdate();
               
                
                /*   q=session.createQuery("select dd from pojo.Diemdanh dd where dd.id.idsinhvien=:idsv");
                q.setParameter("idsv", dd.getId().getIdsinhvien());*/
            }
            
            session.getTransaction().commit();
        } catch (HibernateException he) {
            he.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
